场景：
磁盘快满了，删除了应用的日志，du 变小了，df没变化。
原因：删除的日志，但该日志文件还被其它程序打开
解决方案：重启应用，终极方案重启机器。
当然最重要的需要开发查日志突然猛增的原因。

#3、句柄泄露，为什么会导致磁盘空间不足:

一个文件创建，就新生成了一个inode节点，且inode节点的引用计数为1。
当文件被一个进程打开，则在内存中缓冲建立此inode节点缓存，且其引用计数加1。
一个文件可以被多次打开，创建多个文件描述符，但对应的inode节点只有一个，
对应的磁盘存储只有一个，只是引用计数每打开一次加1。

当文件被rm，在操作系统内部其实是调用了unlink操作，其目录项被删除，
如果其对应的inode节点的引用计数为0，则删除对应的inode节点和清除inode节点位图中对应的位，
其对应磁盘可被再申请；
但如果此文件被其他进程打开，则其对应的inode节点的引用计数不为0，
则不会删除对应的inode节点和清除inode节点位图中对应的位，其对应磁盘不能被再申请，
也就是在lsof下可以看到deleted句柄；
当前文件被所有使用进程close后，系统删除对应的inode节点和清除inode节点位图中对应的位，其对应磁盘可被再申请。

#4、du和df的区别::

du的英文原义为“disk usage”，含义为显示磁盘空间的使用情况。该命令逐级进入指定目录的每一个子目录并显示该目录占用文件系统数据块（1024字节）的情况。若没有给出Names，则对当前目录进行统计。

df命令参数功能：检查文件系统的磁盘空间占用情况，利用所有文件系统对i节点来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。

这也是为什么：

一个被进程打开的文件被rm后，其目录项被删除了，在du命令下是不能被统计到，?而其inode没有被删除，在df命令下是可以被统计到的，这就是在du和df存在差别的原因。

#2、异常情况下，df计算的USED空间会比du大很多。

原因在于du是以文件名、目录名为依据计算空间使用的，而df是以硬盘块使用情况来计算空间使用的。