# 字典是Python语言中唯一的映射类型。
# 映射类型对象里哈希值（键，key）和指向的对象（值，value）是一对多的的关系，通常被认为是可变的哈希表。
# 字典对象是可变的，它是一个容器类型，能存储任意个数的Python对象，其中也可包括其他容器类型。
#
#
# 字典类型与序列类型的区别：
#
# 1. 存取和访问数据的方式不同。
# 2. 序列类型只用数字类型的键（从序列的开始按数值顺序索引）；
# 3. 映射类型可以用其他对象类型作键（如：数字、字符串、元祖，一般用字符串作键），和序列类型的键不同，映射类型的键直4.接或间接地和存储数据值相关联。
# 5. 映射类型中的数据是无序排列的。这和序列类型是不一样的，序列类型是以数值序排列的。
# 6. 映射类型用键直接“映射”到值。
#
#
# 字典是Python中最强大的数据类型之一。
#
#
#
# 现实中会经常碰到字典的合并操作，如何实现呢? 下面总结下

# 方法一】借助dict(d1.items() + d2.items())的方法
d1 = {"user":"root","password":"123"}
d2 = {"ip":"127.0.0.1","port":"4444"}
d3 = dict(d1.items() + d2.items())

# 备注:
#
# 1. d1.items()获取字典的键值对的列表
#
# 2. d1.items() + d2.items()拼成一个新的列表
#
# 3. dict(d1.items()+d2.items())将合并成的列表转变成新的字典

# 【方法二】借助字典的update()方法

d1 = {"user":"root","password":"123"}
d2 = {"ip":"127.0.0.1","port":"4444"}
d3 = {}
d3.update(d1)
d3.update(d2)

# 【方法三】借助字典的dict(d1, **d2)方法

d1 = {"user":"root","password":"123"}
d2 = {"ip":"127.0.0.1","port":"4444"}
d3 = dict(d1,**d2)

# 【方法四】借助字典的常规处理方法
d1 = {"user":"root","password":"123"}
d2 = {"ip":"127.0.0.1","port":"4444"}
d3 = {}

for k,v in d1.items():
    d3[k] = v
for k,v in d2.items():
    d3[k] = v

